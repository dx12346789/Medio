cmake_minimum_required(VERSION 3.25)
project(Medio_ALL VERSION 1.0.0)

set(CMAKE_C_STANDARD 17)
set(CMAKE_CXX_STANDARD 17)

# system
if(NOT COMPILE_OS_TYPE)
    if(CMAKE_SYSTEM_NAME MATCHES "Android")
        set(COMPILE_OS_TYPE ANDROID)
    elseif(IOS)
        set(COMPILE_OS_TYPE IOS)
    elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
        set(COMPILE_OS_TYPE LINUXOS)
    elseif(CMAKE_SYSTEM_NAME MATCHES "Windows")
        set(COMPILE_OS_TYPE WIN32)
    elseif(CMAKE_SYSTEM_NAME MATCHES "Darwin")
        set(COMPILE_OS_TYPE MACOS)
    endif()
endif()

# output path
if(${COMPILE_OS_TYPE} STREQUAL WIN32)
    if(CMAKE_CL_64)
        set(platform "x64")
    else(CMAKE_CL_64)
        set(platform "x86")
    endif()
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${CMAKE_CURRENT_SOURCE_DIR}/out/build/Win-${platform}-${CMAKE_BUILD_TYPE}/)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  ${CMAKE_CURRENT_SOURCE_DIR}/out/build/Win-${platform}-${CMAKE_BUILD_TYPE}/)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${CMAKE_CURRENT_SOURCE_DIR}/out/build/Win-${platform}-${CMAKE_BUILD_TYPE}/)
elseif(${COMPILE_OS_TYPE} STREQUAL Linux)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -fvisibility=hidden")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${CMAKE_CURRENT_SOURCE_DIR}/out/build/linux-${CMAKE_BUILD_TYPE}/)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  ${CMAKE_CURRENT_SOURCE_DIR}/out/build/linux-${CMAKE_BUILD_TYPE}/)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${CMAKE_CURRENT_SOURCE_DIR}/out/build/linux-${CMAKE_BUILD_TYPE}/)
endif()

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/src "libMedio")